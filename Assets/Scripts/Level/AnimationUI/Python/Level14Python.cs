using UnityEngine;
using UnityEngine.UI;
using System.Collections;

public class Level14Python : MonoBehaviour
{
    public Transform tile2Point;      // ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç 2
    public Transform fallOffPoint;    // ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ï‡∏Å‡∏ô‡πâ‡∏≥
    public float runSpeed = 2f;

    public void Correct(string answer, Text askText, PlayerController player)
    {
        Debug.Log("‚úÖ Correct Level16Java");

        if (askText != null)
            askText.text = "2";

        if (player == null || player.CurrentCharacter == null)
            return;

        StartCoroutine(MoveToAndTrigger(player, tile2Point.position, "Win"));
    }

    public void Wrong(Text askText, PlayerController player)
    {
        Debug.Log("‚ùå Wrong Level16Java");

        if (askText != null)
            askText.text = "Lose!";

        if (player == null || player.CurrentCharacter == null)
            return;

        StartCoroutine(MoveToAndTrigger(player, fallOffPoint.position, "Lose", true));
    }

    private IEnumerator MoveToAndTrigger(PlayerController player, Vector3 target, string trigger, bool fall = false)
    {
        GameObject character = player.CurrentCharacter;
        Animator animator = character.GetComponent<Animator>();

        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        Vector3 startPos = character.transform.position;

        // ‡∏´‡∏±‡∏ô‡∏Ç‡∏ß‡∏≤
        Vector3 scale = character.transform.localScale;
        scale.x = Mathf.Abs(scale.x);
        character.transform.localScale = scale;

        // üîß ‡∏•‡πá‡∏≠‡∏Å Y ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏î‡∏¥‡∏ô‡πÄ‡∏â‡∏µ‡∏¢‡∏á
        target.y = character.transform.position.y;

        // ‡πÄ‡∏î‡∏¥‡∏ô
        animator.SetTrigger("Run");
        yield return StartCoroutine(MoveToPosition(character, target, runSpeed));

        // ‡∏£‡∏≠‡∏´‡∏¢‡∏∏‡∏î
        yield return new WaitForSeconds(0.1f);

        // ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡πà‡∏≤
        TriggerAnimation(animator, trigger);

        if (fall)
        {
            yield return new WaitForSeconds(0.5f);

            // ‡∏ï‡∏Å‡∏•‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
            Vector3 fallTarget = character.transform.position + new Vector3(0f, -1.5f, 0f);
            float fallSpeed = 3f;
            while (Vector3.Distance(character.transform.position, fallTarget) > 0.05f)
            {
                character.transform.position = Vector3.MoveTowards(character.transform.position, fallTarget, fallSpeed * Time.deltaTime);
                yield return null;
            }

            Debug.Log("üí¶ ‡∏ï‡∏Å‡∏ô‡πâ‡∏≥‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢");

            // ‡∏£‡∏≠‡∏≠‡∏µ‡∏Å‡∏ô‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏î‡∏¥‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏∏‡∏î‡πÄ‡∏î‡∏¥‡∏°
            yield return new WaitForSeconds(0.5f);

            // ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
            yield return StartCoroutine(MoveToPosition(character, startPos, runSpeed));

            // ‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏î‡∏¥‡∏ô
            TriggerAnimation(animator, "Idle");
        }
    }

    private IEnumerator MoveToPosition(GameObject obj, Vector3 target, float speed)
    {
        while (Vector3.Distance(obj.transform.position, target) > 0.05f)
        {
            obj.transform.position = Vector3.MoveTowards(obj.transform.position, target, speed * Time.deltaTime);
            yield return null;
        }
    }

    private void TriggerAnimation(Animator animator, string trigger)
    {
        if (animator != null && animator.runtimeAnimatorController != null)
        {
            animator.ResetTrigger("Run");
            animator.ResetTrigger("Win");
            animator.ResetTrigger("Lose");
            animator.ResetTrigger("Idle");
            animator.SetTrigger(trigger);
            Debug.Log($"üéØ Triggered: {trigger}");
        }
    }
}
