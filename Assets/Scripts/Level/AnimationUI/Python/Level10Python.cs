using UnityEngine;
using UnityEngine.UI;
using System.Collections;

public class Level10Python : MonoBehaviour
{
    public GameObject orc; // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Orc prefab ‡πÉ‡∏ô Inspector
    public float runSpeed = 2f;

    private Animator orcAnimator;

    private void Awake()
    {
        if (orc != null)
            orcAnimator = orc.GetComponent<Animator>();
    }

    public void Correct(string answer, Text askText, PlayerController player)
    {
        if (askText != null)
            askText.text = answer;

        StartCoroutine(AttackSequence(player));
    }

    public void Wrong(Text askText, PlayerController player)
    {
        if (askText != null)
            askText.text = "Lose!";

        StartCoroutine(OrcAttackSequence(player));
    }

    private IEnumerator AttackSequence(PlayerController player)
    {
        GameObject mainChar = player.CurrentCharacter;
        if (mainChar == null) yield break;

        // ‡∏´‡∏±‡∏ô‡∏Ç‡∏ß‡∏≤ (‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏¢‡πà‡∏≠‡∏Ç‡∏ô‡∏≤‡∏î)
        Vector3 originalScale = mainChar.transform.localScale;
        mainChar.transform.localScale = new Vector3(Mathf.Abs(originalScale.x), originalScale.y, originalScale.z);

        // ‡∏ï‡∏±‡∏ß‡∏´‡∏•‡∏±‡∏Å‡∏ß‡∏¥‡πà‡∏á
        TriggerPlayerAnimation(player, "Run");
        Vector3 target = mainChar.transform.position + new Vector3(3f, 0f, 0f);
        yield return StartCoroutine(MoveToPosition(mainChar, target, runSpeed));

        // ‡πÇ‡∏à‡∏°‡∏ï‡∏µ
        TriggerPlayerAnimation(player, "Attack");
        Debug.Log("‚úÖ Player Attack Triggered");
        yield return new WaitForSeconds(0.5f);

        // Orc ‡∏ñ‡∏π‡∏Å‡∏ï‡∏µ
        TriggerOrcAnimation("Hurt");
        Debug.Log("‚úÖ Orc Hurt Triggered");
        yield return new WaitForSeconds(0.5f);

        // ‡∏ä‡∏ô‡∏∞
        TriggerPlayerAnimation(player, "Win");
        Debug.Log("‚úÖ Player Win Triggered");
        yield return new WaitForSeconds(0.5f);
        
        Destroy(orc);
    }

    private IEnumerator OrcAttackSequence(PlayerController player)
    {
        GameObject mainChar = player.CurrentCharacter;
        if (mainChar == null) yield break;

        Vector3 playerStartPos = mainChar.transform.position;
        Vector3 orcStartPos = orc.transform.position;

        // ‡∏´‡∏±‡∏ô‡∏ã‡πâ‡∏≤‡∏¢
        Vector3 originalScale = mainChar.transform.localScale;
        mainChar.transform.localScale = new Vector3(-Mathf.Abs(originalScale.x), originalScale.y, originalScale.z);

        // ‡∏ï‡∏±‡∏ß‡∏´‡∏•‡∏±‡∏Å‡∏ß‡∏¥‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö
        TriggerPlayerAnimation(player, "Run");
        Vector3 target = mainChar.transform.position + new Vector3(-1f, 0f, 0f);
        yield return StartCoroutine(MoveToPosition(mainChar, target, runSpeed));

        // Orc ‡∏ß‡∏¥‡πà‡∏á‡∏ï‡∏≤‡∏° + ‡∏´‡∏±‡∏ô‡∏ã‡πâ‡∏≤‡∏¢
        TriggerOrcAnimation("Run");
        orc.transform.localScale = new Vector3(-Mathf.Abs(orc.transform.localScale.x), orc.transform.localScale.y, orc.transform.localScale.z);
        Vector3 orcTarget = orc.transform.position + new Vector3(-3f, 0f, 0f);
        yield return StartCoroutine(MoveToPosition(orc, orcTarget, runSpeed));

        // Orc ‡πÇ‡∏à‡∏°‡∏ï‡∏µ
        TriggerOrcAnimation("Attack");
        Debug.Log("‚úÖ Orc Attack Triggered");
        yield return new WaitForSeconds(0.5f);

        // ‡∏ï‡∏±‡∏ß‡∏´‡∏•‡∏±‡∏Å‡πÅ‡∏û‡πâ
        TriggerPlayerAnimation(player, "Lose");
        Debug.Log("‚úÖ Player Lose Triggered");

        // ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ó‡πà‡∏≤ lose ‡πÄ‡∏•‡πà‡∏ô‡∏™‡∏±‡∏Å‡∏û‡∏±‡∏Å
        yield return new WaitForSeconds(1f);

        // ‡∏ï‡∏±‡∏ß‡∏´‡∏•‡∏±‡∏Å‡∏´‡∏±‡∏ô‡∏Ç‡∏ß‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏ß‡∏¥‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö
        Vector3 playerScale = mainChar.transform.localScale;
        mainChar.transform.localScale = new Vector3(Mathf.Abs(playerScale.x), playerScale.y, playerScale.z);

        // ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡∏ß‡∏¥‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        TriggerPlayerAnimation(player, "Run");
        yield return StartCoroutine(MoveToPosition(mainChar, playerStartPos, runSpeed));

        TriggerOrcAnimation("Run");
        yield return StartCoroutine(MoveToPosition(orc, orcStartPos, runSpeed));

        // ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤ Idle
        TriggerPlayerAnimation(player, "Idle");
        TriggerOrcAnimation("Idle");
    }


    private IEnumerator MoveToPosition(GameObject obj, Vector3 target, float speed)
    {
        while (Vector3.Distance(obj.transform.position, target) > 0.05f)
        {
            obj.transform.position = Vector3.MoveTowards(obj.transform.position, target, speed * Time.deltaTime);
            yield return null;
        }
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Trigger Animation ‡∏Ç‡∏≠‡∏á PlayerController (‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏´‡∏•‡∏±‡∏Å)
    private void TriggerPlayerAnimation(PlayerController player, string trigger)
    {
        if (player != null && player.CurrentCharacter != null)
        {
            Animator animator = player.CurrentCharacter.GetComponent<Animator>();
            if (animator != null && animator.runtimeAnimatorController != null)
            {
                // ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏´‡∏•‡∏±‡∏Å‡∏°‡∏µ Trigger ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡πà‡∏≠‡∏¢‡πÉ‡∏ô‡∏ô‡∏µ‡πâ (‡∏õ‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏° Animator ‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£)
                string[] validTriggers = { "Run", "Attack", "Win", "Lose", "Idle" };
                if (System.Array.Exists(validTriggers, t => t == trigger))
                {
                    ResetAllTriggers(animator);
                    animator.SetTrigger(trigger);
                    Debug.Log($"üéØ Trigger Player '{trigger}'");
                }
                else
                {
                    //Debug.LogWarning($"‚ö†Ô∏è Trigger '{trigger}' ‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á Player");
                }
            }
            else
            {
                //Debug.LogWarning("‚ö†Ô∏è Animator ‡∏Ç‡∏≠‡∏á PlayerCharacter ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
            }
        }
        else
        {
            //Debug.LogWarning("‚ö†Ô∏è Player ‡∏´‡∏£‡∏∑‡∏≠ CurrentCharacter ‡πÄ‡∏õ‡πá‡∏ô null");
        }
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Trigger Animation ‡∏Ç‡∏≠‡∏á Orc
    private void TriggerOrcAnimation(string trigger)
    {
        if (orc != null && orcAnimator != null)
        {
            // Orc ‡∏°‡∏µ Trigger ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡πà‡∏≠‡∏¢‡πÉ‡∏ô‡∏ô‡∏µ‡πâ (‡∏õ‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏° Animator ‡∏Ç‡∏≠‡∏á Orc)
            string[] validTriggers = { "Run", "Attack", "Hurt", "Idle" };
            if (System.Array.Exists(validTriggers, t => t == trigger))
            {
                ResetAllTriggers(orcAnimator);
                orcAnimator.SetTrigger(trigger);
                Debug.Log($"üéØ Trigger Orc '{trigger}'");
            }
            else
            {
                //Debug.LogWarning($"‚ö†Ô∏è Trigger '{trigger}' ‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á Orc");
            }
        }
        else
        {
            //Debug.LogWarning("‚ö†Ô∏è Orc ‡∏´‡∏£‡∏∑‡∏≠ Animator ‡πÄ‡∏õ‡πá‡∏ô null");
        }
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Reset Trigger ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡πà‡∏≠‡∏¢ (‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏Å‡πà‡∏≠‡∏ô‡∏ï‡∏±‡πâ‡∏á Trigger ‡πÉ‡∏´‡∏°‡πà)
    private void ResetAllTriggers(Animator animator)
    {
        animator.ResetTrigger("Win");
        animator.ResetTrigger("Lose");
        animator.ResetTrigger("Idle");
        animator.ResetTrigger("Attack");
        animator.ResetTrigger("Run");
        animator.ResetTrigger("Hurt");
    }
}
